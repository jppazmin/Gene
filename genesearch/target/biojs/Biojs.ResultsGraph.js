
Biojs.ResultsGraph=Biojs.Graph.extend({constructor:function(options){this.base();var self=this;this.onLinkOver(function(e){self._buildTooltip(e.label.canvas,e.source,e.target);});},opt:{target:"YourOwnDivId",sparqlUrl:'http://biotea.idiginfo.org/sparql',proxyUrl:'../biojs/dependencies/proxy/proxy.php',minSharedEntities:14,groupBy:Biojs.Annotations.GROUP_BY_TERM,filterBy:{frequency:7,topics:[]}},eventTypes:["onClick","onQueryRequest","onDataArrived"],applyFilter:function(f){if(this.opt.filterBy!=f){Biojs.console.log("Applying filter freq: "+f.frequency+" topics: "+f.topics);this.opt.filterBy=f;this._repaint();}},_annotationsByNode:{},addLink:function(source,target,label,id){var link=this.base(source,target,label,id);return link;},groupBy:function(g){if(this.opt.groupBy!=g){this.opt.groupBy=g;this._repaint();}},setQuery:function(userQuery){var self=this;this._showLoading();this.removeAllNodes();this._removeData();this._requestUniprotAccession(userQuery,function(accession){if(!Biojs.Utils.isEmpty(accession)&&accession.match(/^[A-z]([0-9])*$/g)){var strQuery='SELECT ?article ?title ?seeAlso ?sameAs ?date ?abstract ?journalTitle ?volume ?issue ?start ?end fn:concat(?authorLastName, ", ", ?authorFirstName) AS ?author '+'WHERE {'+'?article a bibo:AcademicArticle ; '+'dcterms:source ?pmc ; '+'dcterms:title ?title ; '+'dcterms:publisher ?publisher ; '+'bibo:volume ?volume ; '+'bibo:pageStart ?start ; '+'bibo:pageEnd ?end ; '+'bibo:authorList ?authorList ; '+'bibo:abstract ?abstract . '+'?pmc owl:sameAs ?sameAs . '+'OPTIONAL {?pmc rdfs:seeAlso ?seeAlso} . '+'OPTIONAL {?article dcterms:issued ?date } . '+'?authorList rdfs:member ?member . '+'?member foaf:givenName ?authorFirstName ; '+'foaf:familyName ?authorLastName. '+'?article dcterms:hasPart ?issueJournal . '+'?issueJournal a bibo:Issue ; '+'dcterms:hasPart ?journal . '+'OPTIONAL {?issueJournal bibo:issue ?issue } . '+'?journal a bibo:Journal ; '+'dcterms:title ?journalTitle . '+'?annot a aot:ExactQualifier ; '+'pav:createdBy <http://www.ebi.ac.uk/webservices/whatizit#whatizitUkPmcAll> ; '+'ao:annotatesResource ?article ; '+'ao:hasTopic <http://purl.uniprot.org/core/'+accession+'> . '+'} LIMIT 100';Biojs.console.log("Applying SPARQL query: "+strQuery);self._doQuery(strQuery);}else{}});},_buildTooltip:function(labelElement,sourceID,targetID){var self=this;var labelText=jQuery(labelElement).text();var divID=labelText+sourceID+targetID;if(this._currentCloud!=divID){if(this._tooltip!=undefined)this._tooltip.remove();delete this._tooltip;this._tooltip=new Biojs.Tooltip({targetSelector:labelElement,cbRender:function(element,contentDiv){if(contentDiv.attr('id')!=divID){contentDiv.attr('id',divID);if(this._annotations!=undefined){this._annotations.cancelRequest();delete this._annotations;}
this._annotations=new Biojs.AnnotationsCloud({target:contentDiv,proxyUrl:self.opt.proxyUrl,groupBy:self.opt.groupBy,filterBy:{field:self.opt.groupBy,value:labelText}});var a=self._annotationsByNode[sourceID].join(self._annotationsByNode[targetID]);a.applyFilter(self.opt.filterBy);a.getDataBy(self.opt.groupBy,labelText);this._annotations.setAnnotations(a);}},position:Biojs.Tooltip.ELEMENT_POSITION,arrowType:Biojs.Tooltip.ARROW_LEFT_MIDDLE});}
this._currentCloud=divID;},_showLoading:function(){},_doQuery:function(query){var params={query:query,format:'application/json'};this._showLoading();this._fetchData(this.opt.sparqlUrl,params,function(data){var columns=Biojs.ResultsGraph.COLUMNS;var decodedData,results,obj,articles;var jsonData={iTotalRecords:0,iTotalDisplayRecords:0,aaData:[]};try{decodedData=jQuery.parseJSON(data);results=decodedData.results.bindings;}catch(e){Biojs.console.log("Error decoding response data: "+e.message);return jsonData;}
Biojs.console.log(decodedData);articles={};for(r in results){obj=results[r];if(!articles.hasOwnProperty(obj.title.value)){articles[obj.title.value]=new Array(columns.length);for(c=0;c<columns.length;c++){try{articles[obj.title.value][c]=obj[columns[c].key].value;}catch(e){if(c.optional){articles[obj.title.value][c]="";}else{articles[obj.title.value][c]="";Biojs.console.log("Missing value for column: "+c.name);}}}}else{for(c=0;c<columns.length;c++){if(!columns[c].unique){if(articles[obj.title.value][c].indexOf(obj[columns[c].key].value)==-1){articles[obj.title.value][c]+='; '+obj[columns[c].key].value;}}}}}
for(title in articles){jsonData.aaData.push(articles[title]);}
jsonData.iTotalRecords=jsonData.aaData.length;this._setData(jsonData);});},_getResourceID:function(nodeID){return this._resourceURI[nodeID];},_setResourceID:function(nodeID,resourceURI){return this._resourceURI[nodeID]=resourceURI;},_setData:function(json){var nodeURI;var nodeTitle;this._removeData();for(var i in json.aaData){resourceURI=json.aaData[i][0];resourceTitle=json.aaData[i][1];nodeID=this._digest(resourceURI);this.addNode('<div id='+nodeID+'>'+resourceTitle+'</div>');this._setResourceID(nodeID,resourceURI);this._requestAnnotations(resourceURI);}},_removeData:function(){delete this._resourceURI;this._resourceURI={};delete this._links;this._links={};},_requestUniprotAccession:function(userQuery,fnCallback){var self=this;var query='SELECT distinct ?gene str(?uniprotAcc) as ?humanUniprotAcc '+'WHERE { '+'?wikiArticle rdf:type gw_wiki:Category-3AHuman_proteins ; '+'rdfs:label ?gene ; '+'gw_property:Has_entrez_id ?entrezId ; '+'gw_property:Has_uniprot_id ?uniprotAcc . '+'FILTER (regex(?gene, "'+userQuery+'", "i")) . '+'} LIMIT 1';var params={query:query,format:'application/json'};Biojs.console.log("Requesting the accession: "+query);this._fetchData(this.opt.sparqlUrl,params,function(data){var accession="";try{var jsonData=jQuery.parseJSON(data);accession=jsonData.results.bindings[0].humanUniprotAcc.value;}catch(e){Biojs.console.log("Error decoding response data: "+e.message);}
Biojs.console.log("Accession: "+accession);fnCallback.call(self,accession);});},_requestAnnotations:function(resourceURI,fnCallback){var self=this;var annots=new Biojs.Annotations({sparqlUrl:this.opt.sparqlUrl,proxyUrl:this.opt.proxyUrl,groupBy:this.opt.groupBy});annots.requestAnnotations(resourceURI,function(data){self._paintLinksOf(resourceURI);});this._annotationsByNode[this._digest(resourceURI)]=annots;},_repaint:function(){delete this._links;this._links={};this.removeAllLinks();for(var i in this._resourceURI){this._paintLinksOf(this._resourceURI[i]);}},_paintLinksOf:function(resourceURI){Biojs.console.log("Painting links of "+resourceURI);var nodeID=this._digest(resourceURI);var linkID,matchedItems;for(var otherNodeID in this._resourceURI){if(otherNodeID!=nodeID){linkID=parseInt(nodeID,10)+parseInt(otherNodeID,10);if(this._links[linkID]==undefined){matchedItems=this._matchNodes(nodeID+'',otherNodeID+'');for(var i in matchedItems){this.addLink(nodeID,otherNodeID,matchedItems[i]);this._links[linkID]=true;}}}}},_fetchData:function(sourceUrl,params,fnCallback){var self=this;var httpRequest={url:sourceUrl};httpRequest.dataType='json';if(this.opt.proxyUrl!=undefined){httpRequest.url=this.opt.proxyUrl;params=[{name:"url",value:sourceUrl+'?'+jQuery.param(params)}];httpRequest.dataType="text";}
httpRequest.success=function(data){fnCallback.call(self,data);self.raiseEvent(Biojs.ResultsGraph.EVT_ON_DATA_ARRIVED,{"data":data});}
httpRequest.type='GET';httpRequest.data=params;jQuery.ajax(httpRequest);},_matchNodes:function(nodeID1,nodeID2){Biojs.console.log("Matching nodes "+this._resourceURI[nodeID1]+"<>"+this._resourceURI[nodeID2]);var a1=this._annotationsByNode[nodeID1];var a2=this._annotationsByNode[nodeID2];var item,res=[];if((a1==undefined)||(a2==undefined)||(a1.getRawData()==undefined)||(a2.getRawData()==undefined)){return res;}
a1.getDataBy(this.opt.groupBy);a2.getDataBy(this.opt.groupBy);var a=a1.join(a2);a.applyFilter(this.opt.filterBy);var i=a.iterator();while(i.hasNext()){item=i.next();if(item.freq>=this.opt.minSharedEntities){res.push(item.id);}}
Biojs.console.log(res);return res;},_matchEntities:function(e1,e2,minMatchedEntities){var count=0;for(var i in e1){for(var j in e2){if(e1[i]==e2[j]){if((count++>=minMatchedEntities)&&(count>=this.opt.filterBy['frequency']))return true;}}}
Biojs.console.log("No entities matched");return false;},_digest:function(str){var hash=5381;for(i=0;i<str.length;i++){char=str.charCodeAt(i);hash=((hash<<5)+hash)+char;}
return hash.toString();}},{EVT_ON_DATA_ARRIVED:"onDataArrived",COLUMNS:[{unique:true,optional:false,name:"Article",key:"article"},{unique:true,optional:false,name:"Title",key:"title"},],TOPIC:{"http://purl.obolibrary.org/obo/CHEBI":{shortName:"chebi",baseUrl:"http://identifiers.org/obo.chebi/CHEBI:",prefix:"CHEBI:",color:"#D6A100"},"http://purl.org/obo/owl/GO#GO":{shortName:"go",baseUrl:"http://identifiers.org/obo.go/GO:",prefix:"GO:",color:"#0067E6"},"http://purl.org/obo/owl/PW#PW":{shortName:"pw",baseUrl:"http://purl.org/obo/owl/PW#PW_",prefix:"",color:"#00DAE6"},"http://mged.sourceforge.net/ontologies/MGEDOntology.owl":{shortName:"mged",baseUrl:"http://mged.sourceforge.net/ontologies/MGEDOntology.owl#",prefix:"",color:"#6961FF"},"http://purl.uniprot.org/core":{shortName:"uniprot",baseUrl:"http://identifiers.org/uniprot/",prefix:"",color:"#61A8FF"},"http://purl.bioontology.org/ontology/MDDB":{shortName:"mddb",baseUrl:"http://purl.bioontology.org/ontology/MDDB/",prefix:"",color:"#FF61A8"},"http://purl.bioontology.org/ontology/NDDF":{shortName:"nddf",baseUrl:"http://purl.bioontology.org/ontology/NDDF/",prefix:"",color:"#C7005A"},"http://purl.bioontology.org/ontology/NDFRT":{shortName:"ndfrt",baseUrl:"http://purl.bioontology.org/ontology/NDFRT/",prefix:"",color:"#FF0F4B"},"http://purl.bioontology.org/ontology/MEDLINEPLUS":{shortName:"medline",baseUrl:"http://purl.bioontology.org/ontology/MEDLINEPLUS/",prefix:"",color:"#329D27"},"http://purl.bioontology.org/ontology/SNOMEDCT":{shortName:"snomed",baseUrl:"http://purl.bioontology.org/ontology/SNOMEDCT/",prefix:"",color:"#AAD864"},"http://purl.org/obo/owl/SYMP#SYMP":{shortName:"symptom",baseUrl:"http://purl.org/obo/owl/SYMP#SYMP_",prefix:"",color:"#A2E7BD"},"http://purl.bioontology.org/ontology/MDR":{shortName:"meddra",baseUrl:"http://purl.bioontology.org/ontology/MDR/",prefix:"",color:"#99CC00"},"http://purl.bioontology.org/ontology/MSH":{shortName:"mesh",baseUrl:"http://purl.bioontology.org/ontology/MSH/",prefix:"",color:"#669980"},"http://purl.bioontology.org/ontology/OMIM":{shortName:"omim",baseUrl:"http://identifiers.org/omim/",prefix:"",color:"#989966"},"http://purl.bioontology.org/ontology/ICD9-9":{shortName:"icd9",baseUrl:"http://identifiers.org/icd/",prefix:"",color:"#CABDAF"},"http://www.ifomis.org/bfo/1.1/span":{shortName:"obi",baseUrl:"http://identifiers.org/obo.obi/OBI_",prefix:"",color:"#806699"},"http://berkeleybop.org/obo/UMLS":{shortName:"umls",baseUrl:"http://berkeleybop.org/obo/UMLS:",prefix:"",color:"#CC00FF"},"http://purl.bioontology.org/ontology/PO":{shortName:"po",baseUrl:"http://purl.bioontology.org/ontology/PO/",prefix:"",color:"#007D00"},"http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl":{shortName:"ncithesaurus",baseUrl:"http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl",prefix:"",color:"#9C38FF"},"http://purl.org/obo/owl/NCBITaxon#NCBITaxon":{shortName:"ncbitaxon",baseUrl:"http://identifiers.org/taxonomy/",prefix:"",color:"#5E00BD"}}});